version: '3.8'
services:
  db:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - private_network

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    networks:
      - private_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
    networks:
      - private_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ${SOURCE_SSL_DIR}:/etc/ssl/certs:ro
    environment:
      - PORT=${PORT}
      - SERVER_NAME=${DOMAIN}
      - SSL_CERTIFICATE_PATH=${SSL_CERTIFICATE_PATH}
      - SSL_CERTIFICATE_KEY_PATH=${SSL_CERTIFICATE_KEY_PATH}
      - SSL_CERTIFICATE_CHAIN_PATH=${SSL_CERTIFICATE_CHAIN_PATH}
    depends_on:
      - backend
      - frontend
    networks:
      - private_network


volumes:
  postgres_data:

networks:
  private_network:
    external: true